buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id "com.diffplug.spotless" version "5.12.4"
    id "idea"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = project.mod_version + "-SNAPSHOT"

ext.pr = System.getenv('PR_NUMBER') ?: ""
if (ext.pr) {
    version = project.mod_version + "+pr" + ext.pr
}

ext.tag = System.getenv('TAG') ?: ""
if (ext.tag) {
    if (!ext.tag.startsWith("forge/")) {
        throw new GradleException("Tags for the forge version should start with forge/: ${ext.tag}")
    }
    version = ext.tag.substring("forge/".length())
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("appeng:appliedenergistics2:${rootProject.ae2_forge_version}") {
        exclude group: "mezz.jei"
        exclude group: "me.shedaniel"
    }

    implementation fg.deobf("dev.architectury:architectury-forge:${rootProject.architectury_version}")
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth}")
    implementation fg.deobf("top.theillusivec4.curios:curios-forge:${rootProject.curios_version}")

    //runtimeOnly fg.deobf("curse.maven:jade-324717:3872400")

    compileOnly fg.deobf("mezz.jei:jei-${jei_minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${jei_minecraft_version}-forge-api:${jei_version}")
    if (project.runtime_itemlist_mod == "jei") {
        runtimeOnly fg.deobf("mezz.jei:jei-${jei_minecraft_version}-forge:${jei_version}")

        compileOnly fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${project.rei_version}")
    } else if (project.runtime_itemlist_mod == "rei") {
        implementation "me.shedaniel.cloth:basic-math:0.6.1"
        implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${project.rei_version}")
    } else {
        throw new GradleException("Invalid runtime_itemlist_mod value: " + project.runtime_itemlist_mod)
    }

    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}


archivesBaseName = rootProject.archives_base_name
version = rootProject.version
group = rootProject.maven_group

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        content {
            includeGroup "net.fabricmc.fabric-api"
            includeGroup "appeng"
            includeGroup "mezz.jei"
        }
    }
    maven {
        url "https://maven.bai.lol"
        content {
            includeGroup "mcp.mobius.waila"
            includeGroup "lol.bai"
        }
    }
    maven {
        url "https://maven.shedaniel.me/"
        content {
            includeGroup "me.shedaniel"
            includeGroup "me.shedaniel.cloth"
            includeGroup "dev.architectury"
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup "com.terraformersmc"
            includeGroup "dev.emi"
        }
    }
    maven {
        name = "Ladysnake Libs"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
        content {
            includeGroup "dev.onyxstudios.cardinal-components-api"
        }
    }
    maven {
        url "https://maven.parchmentmc.net/"
        content {
            includeGroup "org.parchmentmc.data"
        }
    }
    maven {
        url = "https://maven.theillusivec4.top/"
        content {
            includeGroup "top.theillusivec4.curios"
        }
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

def commonRunProperties = {
    workingDirectory project.file('run')
    property 'forge.logging.console.level', 'debug'
    property 'fml.earlyprogresswindow', 'false'
    jvmArgs "--add-opens", "java.base/sun.security.util=ALL-UNNAMED"
    jvmArgs "--add-opens", "java.base/java.util.jar=ALL-UNNAMED"
    // See https://github.com/Vazkii/Patchouli#mixin-troubleshooting
    property 'mixin.env.remapRefMap', 'true'
    property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
}

minecraft {
    mappings channel: 'official', version: project.minecraft_version
    runs {
        client {
            with commonRunProperties
        }
        server {
            with commonRunProperties
        }
    }
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    finalizedBy 'reobfJar'
    manifest {
        attributes([
                "MixinConfigs": "ae2wtlib.mixins.json"
        ])
    }
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version, "ae2_version": rootProject.ae2_forge_version
    }
}

spotless {
    buildscript {
        repositories {
            mavenCentral()
        }
    }

    java {
        target '*/src/*/java/**/*.java'

        endWithNewline()
        indentWithSpaces()
        removeUnusedImports()
        toggleOffOn()
        eclipse().configFile 'codeformat/codeformat.xml'
        importOrderFile 'codeformat/ae2wtlib.importorder'
    }

    format 'json', {
        target '*/src/*/resources/**/*.json'
        prettier().config(['parser': 'json'])
    }
}
